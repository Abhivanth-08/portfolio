@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here.
   All colors MUST be HSL. */

@layer base {
  :root {
    /* Futuristic Black & Beige Design System */
    --background: 0 0% 4%;
    --foreground: 40 60% 85%;

    --card: 0 0% 8%;
    --card-foreground: 40 60% 85%;

    --popover: 0 0% 6%;
    --popover-foreground: 40 60% 85%;

    --primary: 40 70% 65%;
    --primary-foreground: 0 0% 4%;

    --secondary: 0 0% 12%;
    --secondary-foreground: 40 60% 85%;

    --muted: 0 0% 15%;
    --muted-foreground: 40 30% 55%;

    --accent: 40 80% 70%;
    --accent-foreground: 0 0% 4%;

    --destructive: 0 70% 50%;
    --destructive-foreground: 40 60% 85%;

    --border: 40 30% 20%;
    --input: 0 0% 12%;
    --ring: 40 70% 65%;

    --radius: 0.75rem;

    /* Futuristic Glow Effects */
    --glow-primary: 40 80% 60%;
    --glow-secondary: 40 60% 50%;

    /* Gradients */
    --gradient-radial: radial-gradient(circle at center, hsl(40 70% 65% / 0.15) 0%, transparent 70%);
    --gradient-hero: linear-gradient(135deg, hsl(0 0% 4%) 0%, hsl(0 0% 8%) 50%, hsl(40 20% 10%) 100%);
    --gradient-card: linear-gradient(145deg, hsl(0 0% 6% / 0.8) 0%, hsl(0 0% 10% / 0.6) 100%);

    /* Shadows & Glows */
    --shadow-glow: 0 0 40px hsl(var(--glow-primary) / 0.3), 0 0 80px hsl(var(--glow-primary) / 0.1);
    --shadow-card: 0 20px 60px hsl(0 0% 0% / 0.5), 0 0 30px hsl(var(--glow-primary) / 0.1);
    --shadow-intense: 0 0 60px hsl(var(--glow-primary) / 0.5), 0 0 100px hsl(var(--glow-primary) / 0.2);

    /* Animations */
    --transition-smooth: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  * {
    @apply border-border;
  }

  body {
    margin: 0;
    @apply bg-background text-foreground font-sans antialiased;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
      sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  code {
    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;
  }

  h1, h2, h3, h4, h5, h6 {
    font-family: 'Orbitron', sans-serif;
    font-weight: 700;
  }
}

@layer utilities {
  .glow-text {
    text-shadow: 0 0 20px hsl(var(--glow-primary) / 0.5),
                 0 0 40px hsl(var(--glow-primary) / 0.3);
  }

  .glow-border {
    box-shadow: 0 0 20px hsl(var(--glow-primary) / 0.4),
                inset 0 0 20px hsl(var(--glow-primary) / 0.1);
  }

  .glass-panel {
    background: linear-gradient(145deg, hsl(0 0% 10% / 0.4) 0%, hsl(0 0% 5% / 0.2) 100%);
    backdrop-filter: blur(20px);
    border: 1px solid hsl(var(--border) / 0.3);
  }

  .holographic-border {
    border: 2px solid transparent;
    background: linear-gradient(hsl(0 0% 8%), hsl(0 0% 8%)) padding-box,
                linear-gradient(135deg, hsl(var(--primary)) 0%, transparent 50%, hsl(var(--primary)) 100%) border-box;
  }

  .floating {
    animation: float 6s ease-in-out infinite;
  }

  .pulse-glow {
    animation: pulse-glow 3s ease-in-out infinite;
  }

  /* Futuristic Cursor */
  .futuristic-cursor {
    cursor: none;
  }

  .cursor-dot {
    position: fixed;
    top: 0;
    left: 0;
    width: 8px;
    height: 8px;
    background: radial-gradient(circle, hsl(var(--primary)) 0%, transparent 70%);
    border-radius: 50%;
    pointer-events: none;
    z-index: 9999;
    mix-blend-mode: difference;
    transition: transform 0.1s ease;
  }

  .cursor-ring {
    position: fixed;
    top: 0;
    left: 0;
    width: 40px;
    height: 40px;
    border: 2px solid hsl(var(--primary) / 0.6);
    border-radius: 50%;
    pointer-events: none;
    z-index: 9998;
    transition: all 0.15s ease;
    mix-blend-mode: difference;
  }

  .cursor-ring.hover {
    transform: scale(1.5);
    border-color: hsl(var(--primary));
    background: hsl(var(--primary) / 0.1);
  }

  /* Liquid Distortion Effect */
  .liquid-distortion {
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .liquid-distortion:hover {
    transform: perspective(1000px) rotateX(5deg) rotateY(5deg) scale(1.02);
    filter: url(#liquid-distortion);
  }

  /* Soundwave Ripple Effect */
  .ripple-container {
    position: relative;
    overflow: hidden;
  }

  .ripple {
    position: absolute;
    border-radius: 50%;
    background: radial-gradient(circle, hsl(var(--primary) / 0.3) 0%, transparent 70%);
    transform: scale(0);
    animation: ripple-animation 0.6s linear;
    pointer-events: none;
  }

  /* Parallax Elements */
  .parallax-slow {
    transform: translateZ(-2px) scale(3);
  }

  .parallax-medium {
    transform: translateZ(-1px) scale(2);
  }

  .parallax-fast {
    transform: translateZ(0px) scale(1);
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px) translateX(0px);
    }
    25% {
      transform: translateY(-20px) translateX(10px);
    }
    50% {
      transform: translateY(-10px) translateX(-10px);
    }
    75% {
      transform: translateY(-25px) translateX(5px);
    }
  }

  @keyframes pulse-glow {
    0%, 100% {
      box-shadow: 0 0 20px hsl(var(--glow-primary) / 0.4),
                  0 0 40px hsl(var(--glow-primary) / 0.2);
    }
    50% {
      box-shadow: 0 0 40px hsl(var(--glow-primary) / 0.6),
                  0 0 80px hsl(var(--glow-primary) / 0.3);
    }
  }

  @keyframes rotate-3d {
    0% {
      transform: rotateY(0deg) rotateX(0deg);
    }
    100% {
      transform: rotateY(360deg) rotateX(360deg);
    }
  }

  @keyframes ripple-animation {
    to {
      transform: scale(4);
      opacity: 0;
    }
  }

  .rotate-3d {
    animation: rotate-3d 20s linear infinite;
    transform-style: preserve-3d;
  }
}
